name: Build and Publish Ionic App

on:
  push:
      branches:
      - master
      - test

jobs:
  variables:
    runs-on: ubuntu-latest
    name: Set Deploy Environment Variables
    outputs:
      VERSION_NAME: ${{ steps.version.outputs.VERSION_NAME }}
      VERSION_CODE: ${{ steps.version.outputs.VERSION_CODE }}
      DEPLOY_ENVIRONMENT: ${{ steps.get_env.outputs.DEPLOY_ENVIRONMENT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - name: Give permission to execute the script
        run: chmod +x extract-version.sh

      - name: Extract version information
        id: version
        run: ./extract-version.sh

      - name: Get environment
        id: get_env
        run: echo "DEPLOY_ENVIRONMENT=$([[ "${{ github.ref }}" = "refs/heads/test" ]] && echo 'test' || echo 'prod')" >> $GITHUB_OUTPUT

      - name: Print DEPLOY_ENVIRONMENT variable
        run: echo "The environment is ${{ steps.get_env.outputs.DEPLOY_ENVIRONMENT }}"

  docker:
    runs-on: ubuntu-latest
    name: Build and Push Docker Image
    needs: variables
    env:
      VERSION_NAME: ${{ needs.variables.outputs.VERSION_NAME }}
      VERSION_CODE: ${{ needs.variables.outputs.VERSION_CODE }}
      DEPLOY_ENVIRONMENT: ${{ needs.variables.outputs.DEPLOY_ENVIRONMENT }}
    steps:
      - name: Show output variables
        run: echo $GITHUB_OUTPUT

      - name: Set up ENVIRONMENT variable
        run: echo "ENVIRONMENT=$([[ ${{ env.DEPLOY_ENVIRONMENT }} == 'test' ]] && echo 'development')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Login
        uses: docker/login-action@v3.2.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6.1.0
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE }}
          KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEYSTORE_ALIAS_PASSWORD: ${{ secrets.KEYSTORE_ALIAS_PASSWORD }}
        with:
          push: true
          build-args: |
            KEYSTORE=${{ env.KEYSTORE_BASE64 }}
            KEYSTORE_ALIAS=${{ env.KEYSTORE_ALIAS }}
            KEYSTORE_PASSWORD=${{ env.KEYSTORE_PASSWORD }}
            KEYSTORE_ALIAS_PASSWORD=${{ env.KEYSTORE_ALIAS_PASSWORD}}
            ENVIRONMENT=${{ env.ENVIRONMENT }}
            VERSION_CODE=${{ env.VERSION_CODE }}
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/dataquest:latest
            ${{ secrets.DOCKER_USERNAME }}/dataquest:${{ env.VERSION_NAME }}-${{ env.DEPLOY_ENVIRONMENT }}.${{ env.VERSION_CODE }}
            ${{ secrets.DOCKER_USERNAME }}/dataquest:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  publish:
    runs-on: ubuntu-latest
    name: Publish Android Bundle on Google Play Store
    needs: [ docker, variables ]
    env:
      DEPLOY_ENVIRONMENT: ${{ needs.variables.outputs.DEPLOY_ENVIRONMENT }}
      VERSION_NAME: ${{ needs.variables.outputs.VERSION_NAME }}
      VERSION_CODE: ${{ needs.variables.outputs.VERSION_CODE }}
    steps:
      # - name: Check out the code
      #   uses: actions/checkout@v4.1.7

      - name: Show GitHub workspace
        run: echo ${{ github.workspace }}

      - name: Set track
        id: set_track
        run: echo "TRACK=$([[ "${{ env.DEPLOY_ENVIRONMENT }}" = "test" ]] && echo 'internal' || echo 'production')" >> $GITHUB_OUTPUT

      - name: Print track
        run: echo "The track is ${{ steps.set_track.outputs.TRACK }}"

      - name: Docker Extract
        uses: shrink/actions-docker-extract@v3.0.0
        with:
          image: ${{ secrets.DOCKER_USERNAME }}/dataquest:${{ env.VERSION_NAME }}-${{ env.DEPLOY_ENVIRONMENT }}.${{ env.VERSION_CODE }}
          path: /www/app/android/app/build/outputs/bundle/release/.
          destination: ${{ github.workspace }}/bundle

      - name: Upload Android Release to Play Store
        uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: com.blaucastmedia.dataquest.app
          releaseFiles: ${{ github.workspace }}/bundle/app-release-signed.aab
          releaseName: ${{ env.VERSION_NAME }}-${{ env.DEPLOY_ENVIRONMENT }}.${{ env.VERSION_CODE }}
          track: ${{ steps.set_track.outputs.TRACK }}

#  The  SERVICE_ACCOUNT_JSON  is a secret that we will add to the repository.
#  To add the secret, go to the repository settings, then click on the  Secrets  tab. Click on  New repository secret  and add the  SERVICE_ACCOUNT_JSON  secret.
#  The value of the secret is the content of the  service-account.json  file.
#  Now, letâ€™s create a new branch and push the changes to the repository.
#  git checkout -b test